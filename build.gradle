import groovy.util.*
import org.apache.tools.ant.filters.*

plugins {
    id "groovy"
}

group = "com.pagerduty.madlibs"
version = "1.0"
def mainClass = group + ".Main"
def resourceFilterTokens = [ NAME: project.name, VERSION: version, MAIN_CLASS: mainClass ]
def distDir = "$buildDir/distributions/main"

dependencies {
    compile "com.fasterxml.jackson.core:jackson-databind:2.6.0"
    compile "commons-cli:commons-cli:1.3.1"
    compile "javax.ws.rs:javax.ws.rs-api:2.0.1"
    compile "org.codehaus.groovy:groovy-all:2.4.3:indy"
    compile "org.glassfish.jersey.containers:jersey-container-jetty-servlet:2.19"
    compile "org.glassfish.jersey.media:jersey-media-json-jackson:2.19"
    compile "org.mongodb:mongodb-driver:3.0.3"
    compile "org.slf4j:slf4j-log4j12:1.7.12"

    runtime "com.fasterxml.jackson.module:jackson-module-jaxb-annotations:2.6.0"
    runtime "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:2.6.0"
    runtime "com.fasterxml.jackson.jaxrs:jackson-jaxrs-base:2.6.0"
    runtime "org.slf4j:jul-to-slf4j:1.7.12"

    testCompile "junit:junit:4.12"
}

repositories {
    mavenCentral()
}

//-----------------------------------------------------------------------------

processResources {
    filter ReplaceTokens, tokens: resourceFilterTokens
}

jar {
    include "**/*.class"
}

task distResources(type: Copy) {
    description 'Assembles resource files for the project'
    from sourceSets.main.output.resourcesDir
    into distDir

    doLast {
        ant.chmod file: "$distDir/madlibs", perm: "+x"
    }
}

task distLib(type: Copy) {
    description 'Assembles dependency jar files for the project'
    from jar.archivePath
    from configurations.runtime
    into "$distDir/lib"
}

task dist(type: Zip) {
    description 'Assembles the project to a zip file'
    dependsOn assemble, distResources, distLib
    outputs.dir distDir
    from distDir
}

build {
    dependsOn dist
}

tasks.withType(GroovyCompile) {
    groovyOptions.optimizationOptions.indy = true
}